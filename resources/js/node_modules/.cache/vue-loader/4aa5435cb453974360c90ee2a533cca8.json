{"remainingRequest":"/home/bhanu/projects/vue-js/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bhanu/projects/vue-js/demo/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bhanu/projects/vue-js/demo/src/views/Login.vue","mtime":1590088633565},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/cache-loader/dist/cjs.js","mtime":1589999924547},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/babel-loader/lib/index.js","mtime":1589999924501},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/cache-loader/dist/cjs.js","mtime":1589999924547},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/vue-loader/lib/index.js","mtime":1589999928835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBlbWFpbDogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGNoZWNrZWQ6IFtdCiAgICAgIH0sCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKFsnbG9naW4nXSksCiAgICBvblN1Ym1pdChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCkKICAgICAgdGhpcy5sb2dpbih0aGlzLmZvcm0pCiAgICAgIC8vIGFsZXJ0KEpTT04uc3RyaW5naWZ5KHRoaXMuZm9ybSkpCiAgICB9LAogICAgb25SZXNldChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCkKICAgICAgLy8gUmVzZXQgb3VyIGZvcm0gdmFsdWVzCiAgICAgIHRoaXMuZm9ybS5lbWFpbCA9ICcnCiAgICAgIHRoaXMuZm9ybS5wYXNzd29yZCA9ICcnCiAgICAgIHRoaXMuZm9ybS5jaGVja2VkID0gW10KICAgIH0KICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container fluid=\"true\" class=\"mt-5\">\n        <b-row class=\"justify-content-md-center\">\n        <b-col cols=\"6\">\n            <b-jumbotron>\n              <u><h4 class=\"text-center\">Login</h4></u>\n              <b-form @submit=\"onSubmit\" @reset=\"onReset\">\n                <b-form-group\n                    id=\"input-group-1\"\n                    label-for=\"input-1\"\n                    required\n                >\n                    <b-form-input\n                    id=\"input-1\"\n                    v-model=\"form.email\"\n                    type=\"text\"\n                    required\n                    placeholder=\"Enter email\"\n                    ></b-form-input>\n                </b-form-group>\n\n                <b-form-group id=\"input-group-2\" label-for=\"input-2\">\n                    <b-form-input\n                    id=\"input-2\"\n                    v-model=\"form.password\"\n                    type=\"password\"\n                    required\n                    placeholder=\"Enter password\"\n                    ></b-form-input>\n                </b-form-group>\n\n                <b-form-group id=\"input-group-4\">\n                    <b-form-checkbox-group v-model=\"form.checked\" id=\"checkboxes-4\">\n                    <b-form-checkbox value=\"me\">Remember me</b-form-checkbox>\n                    </b-form-checkbox-group>\n                </b-form-group>\n\n                <b-form-group>\n                  <b-button type=\"submit\" variant=\"primary\">Log In</b-button>\n                </b-form-group>\n                <b-form-group>\n                  <router-link to=\"/register\">Don't have account? sign up</router-link>\n                </b-form-group>\n                <b-form-group>\n                  <router-link to=\"/forgot-password\">Forgot password</router-link>\n                </b-form-group>\n            </b-form>\n            </b-jumbotron>\n        </b-col>\n    </b-row>\n    </b-container>\n</template>\n\n<script>\n  import { mapActions } from 'vuex'\n  export default {\n    data() {\n      return {\n        form: {\n          email: '',\n          password: '',\n          checked: []\n        },\n      }\n    },\n    methods: {\n      ...mapActions(['login']),\n      onSubmit(evt) {\n        evt.preventDefault()\n        this.login(this.form)\n        // alert(JSON.stringify(this.form))\n      },\n      onReset(evt) {\n        evt.preventDefault()\n        // Reset our form values\n        this.form.email = ''\n        this.form.password = ''\n        this.form.checked = []\n      }\n    }\n  }\n</script>"]}]}