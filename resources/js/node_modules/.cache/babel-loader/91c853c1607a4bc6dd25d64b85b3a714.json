{"remainingRequest":"/home/bhanu/projects/vue-js/demo/node_modules/babel-loader/lib/index.js!/home/bhanu/projects/vue-js/demo/node_modules/eslint-loader/index.js??ref--13-0!/home/bhanu/projects/vue-js/demo/src/vuex/modules/user.js","dependencies":[{"path":"/home/bhanu/projects/vue-js/demo/src/vuex/modules/user.js","mtime":1590139301689},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/cache-loader/dist/cjs.js","mtime":1589999924547},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/babel-loader/lib/index.js","mtime":1589999924501},{"path":"/home/bhanu/projects/vue-js/demo/node_modules/eslint-loader/index.js","mtime":1589999926971}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/bhanu/projects/vue-js/demo/src/vuex/modules/user.js"],"names":["displayError","displaySuccess","urls","post","patch","state","getters","actions","register","data","commit","first_name","firstName","last_name","lastName","email","company","password","return_url","returnUrl","REGISTER","vueInstance","$router","push","name","login","LOGIN","response","console","log","forgotPassword","FORGOT_PASSWORD","registrationVerification","verify_token","REGISTRATION_VERIFICATION","mutations"],"mappings":"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","sourcesContent":["import { displayError, displaySuccess } from '../../services';\nimport { urls } from '../../config';\n// import * as types from '../mutation-types';\nimport { post, patch } from '../../services';\nconst state = {\n\n}\n\nconst getters = {\n\n}\n\nconst actions = {\n    /**\n     * User Register\n     * @param {*} param0 \n     * @param {*} data \n     */\n    async register({ commit }, data) {\n        commit('SET_OVERLAY', true);\n        let { firstName: first_name, lastName: last_name, email, company, password, returnUrl: return_url }  = data;\n        try {\n            await post(urls.REGISTER, { first_name, last_name, email, company, password, return_url })\n            commit('SET_OVERLAY', false)\n            displaySuccess(this, 'Account create successfully. Please verify your account');\n            return this.getters.vueInstance.$router.push({ name: 'Login' })\n        } catch (error) {\n            commit('SET_OVERLAY', false)\n            displayError(this, error)\n        }\n    },\n\n    /**\n     * User Login\n     * @param {*} param0 \n     * @param {*} data \n     */\n    async login({commit}, data) {\n        commit('SET_OVERLAY', true)\n        let { email, password } = data;\n        try {\n            let response = await post(urls.LOGIN, { email, password })\n            console.log(response)\n            commit('SET_OVERLAY', false)\n            this.$router.push('/register')\n        } catch (error) {\n            commit('SET_OVERLAY', false)\n            displayError(this, error)\n        }\n    },\n\n    async forgotPassword({ commit }, data) {\n        commit('SET_OVERLAY', true)\n        let { email } = data\n        try {\n            await post(urls.FORGOT_PASSWORD, { email })\n            commit('SET_OVERLAY', false)\n            displaySuccess(this, 'Reset password link has sent to your registered email.');\n            return this.getters.vueInstance.$router.push({ name: 'Login' })\n        } catch (error) {\n            commit('SET_OVERLAY', false)\n            displayError(this, error)\n        }\n    },\n\n    async registrationVerification({ commit }, verify_token) {\n        commit('SET_OVERLAY', true)\n        try {\n            await patch(urls.REGISTRATION_VERIFICATION, { verify_token })\n            commit('SET_OVERLAY', false)\n            displaySuccess(this, 'Email verified successfully.');\n            this.getters.vueInstance.$router.push({ name: 'Login' })\n        } catch (error) {\n            commit('SET_OVERLAY', false)\n            displayError(this, error)\n        }\n    }\n}\n\nconst mutations = {\n    \n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations,\n}"]}]}